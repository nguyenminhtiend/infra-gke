name: Build and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-southeast1
  REGISTRY: asia-southeast1-docker.pkg.dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'terraform/')

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/dev

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform/environments/dev

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: terraform/environments/dev

  build-and-push:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'apps/')
    strategy:
      matrix:
        service: [service-a, service-b]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm nx test ${{ matrix.service }}

      - name: Build application
        run: pnpm nx build ${{ matrix.service }} --prod

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/apps/${{ matrix.service }}:${{ github.sha }}
          docker build -t $IMAGE_TAG -f apps/${{ matrix.service }}/Dockerfile .
          docker push $IMAGE_TAG

          # Also tag as latest for main branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker tag $IMAGE_TAG ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/apps/${{ matrix.service }}:latest
            docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/apps/${{ matrix.service }}:latest
          fi
